echo "do NOT run this file!"
exit

# "BATCH mode" is completly automated and don't asks for anything.
# "Interactive mode" may ask you for one or more stuff

# if you want to start over:
rm -rv newcerts crl certs index.txt* crlnumber serial* *.pem *.csr *.crt *.pfx;

# All in one to create a self-signed ca, a signed sub-ca (for the collector) and a signed key pair for an agent.
rm -rv newcerts crl certs index.txt* crlnumber serial* *.pem *.csr *.crt *.pfx;mkdir -pv newcerts crl certs; touch index.txt crlnumber; echo -n 01 > serial; openssl genrsa -out rootca.pem 4096; tput setaf 3; echo "This is the Root CA"; tput setaf 7; openssl req -config openssl.cnf -new -x509 -days 18250 -subj "//CN=Test Root CA" -key rootca.pem -out rootca.crt;openssl genrsa -out subca_0.pem 4096; tput setaf 3; echo "This is the Sub CA"; tput setaf 7; openssl req -config openssl.cnf -new -subj "//CN=Test Sub CA: 0" -key subca_0.pem -out subca_0.csr; openssl ca -config openssl.cnf -batch -extensions v3_ca -in subca_0.csr -out subca_0.crt -keyfile rootca.pem -cert rootca.crt;openssl genrsa -out agent_0.pem 4096; tput setaf 3; echo "This is the Agent Certificate"; tput setaf 7; openssl req -config openssl.cnf -new -subj "//CN=Test Agent: 0" -key agent_0.pem -out agent_0.csr; openssl ca -batch -config openssl.cnf -in agent_0.csr -out agent_0.crt; cat subca_0.crt rootca.crt > agent_0_chain.crt; cat agent_0.pem agent_0.crt > agent_0_pair.pem; openssl pkcs12 -export -nodes -passout pass: -CSP "Microsoft Enhanced RSA and AES Cryptographic Provider" -name "Test Agent: 0" -caname "Test Sub CA: 0" -caname "Test Root CA" -certfile agent_0_chain.crt -out "agent_0.pfx" -in "agent_0_pair.pem";


# (BATCH mode) Create a self signed root certificate:
mkdir -pv newcerts crl certs; touch index.txt crlnumber; echo -n 01 > serial;openssl genrsa -out rootca.pem 4096; tput setaf 3; echo "This is the Root CA"; tput setaf 7; openssl req -config openssl.cnf -new -x509 -days 18250 -subj "//CN=Test Root CA" -key rootca.pem -out rootca.crt;

# (BATCH mode) Create a sub ca certificate (signed by the root ca):
openssl genrsa -out subca_0.pem 4096; tput setaf 3; echo "This is the Sub CA"; tput setaf 7; openssl req -config openssl.cnf -new -subj "//CN=Test Sub CA: 0" -key subca_0.pem -out subca_0.csr; openssl ca -config openssl.cnf -batch -extensions v3_ca -in subca_0.csr -out subca_0.crt -keyfile rootca.pem -cert rootca.crt; cat rootca.crt > subca_0_chain.crt

# (BATCH mode) Create a server certificate (singed by the default sub ca):
openssl genrsa -out agent_0.pem 4096; tput setaf 3; echo "This is the Agent Certificate"; tput setaf 7; openssl req -config openssl.cnf -new -subj "//CN=Test Agent: 0" -key agent_0.pem -out agent_0.csr; openssl ca -batch -config openssl.cnf -in agent_0.csr -out agent_0.crt; cat subca_0.crt rootca.crt > agent_0_chain.crt; cat agent_0.pem agent_0.crt > agent_0_pair.pem; openssl pkcs12 -export -nodes -passout pass: -CSP "Microsoft Enhanced RSA and AES Cryptographic Provider" -name "Test Agent: 0" -caname "Test Sub CA: 0" -caname "Test Root CA" -certfile agent_0_chain.crt -out "agent_0.pfx" -in "agent_0_pair.pem";

# (Interactive mode) Create a server certificate (signed by the default sub ca):
while [ -f "agent_${agent_name}.crt" ] || [ -z ${agent_name} ]; do if [ -f "agent_${agent_name}.crt" ]; then echo "Agent already exists: Test Agent: ${agent_name}"; fi; echo -n "Agent name: "; read agent_name; done; openssl genrsa -out "agent_${agent_name}.pem" 4096; tput setaf 3; echo "This is a Agent Certificate for: Test Agent: ${agent_name}"; tput setaf 7; openssl req -config openssl.cnf -new -subj "//CN=Test Agent: ${agent_name}" -key "agent_${agent_name}.pem" -out "agent_${agent_name}.csr"; openssl ca -config openssl.cnf -batch -in "agent_${agent_name}.csr" -out "agent_${agent_name}.crt"; cat subca_0.crt rootca.crt > "agent_${agent_name}_chain.crt"; cat "agent_${agent_name}.pem" "agent_${agent_name}.crt" > "agent_${agent_name}_pair.pem"; openssl pkcs12 -export -nodes -passout pass: -CSP "Microsoft Enhanced RSA and AES Cryptographic Provider" -name "Test Agent: ${agent_name}" -caname "Test Sub CA: 0" -caname "Test Root CA" -certfile "agent_${agent_name}_chain.crt" -out "agent_${agent_name}.pfx" -in "agent_${agent_name}_pair.pem"; tput setaf 3; echo -e "\n\nPrivate Key: agent_${agent_name}.pem\nPublic key: agent_${agent_name}.crt\nCertificate Signing Request: agent_${agent_name}.csr\nPFX: agent_${agent_name}.pfx"; tput setaf 7; unset agent_name;




# (Interactive mode) Create a sub ca certificate (signed by the root ca):
while [ -f "subca_${subca_name}.crt" ] || [ -z ${subca_name} ]; do if [ -f "subca_${subca_name}.crt" ]; then echo "Sub CA already exists: Test Sub CA: ${subca_name}"; fi; echo -n "Sub CA name: "; read subca_name; done; openssl genrsa -out "subca_${subca_name}.pem" 4096; tput setaf 3; echo "This is a Sub CA Certificate for: Test Sub CA: ${subca_name}"; tput setaf 7; openssl req -config openssl.cnf -new -subj "//CN=Test Sub CA: ${subca_name}" -key "subca_${subca_name}.pem" -out "subca_${subca_name}.csr"; openssl ca -config openssl.cnf -batch -extensions v3_ca -in "subca_${subca_name}.csr" -out "subca_${subca_name}.crt" -keyfile rootca.pem -cert rootca.crt; cat "subca_${subca_name}.crt" rootca.crt > "subca_${subca_name}_chain.crt"; cat "subca_${subca_name}.pem" "subca_${subca_name}.crt" > "subca_${subca_name}_pair.pem"; tput setaf 3; echo -e "\n\nPrivate Key: subca_${subca_name}.pem\nPublic key: subca_${subca_name}.crt\nCertificate Signing Request: subca_${subca_name}.csr"; tput setaf 7; unset subca_name;

# (Interactive mode) Create a server certificate (asks by which sub ca it sould be signed):
while [ -f "agent_${agent_name}.crt" ] || [ -z ${agent_name} ]; do if [ -f "agent_${agent_name}.crt" ]; then echo "Agent already exists: Test Agent: ${agent_name}"; fi; echo -n "Agent name: "; read agent_name; done; while [ ! -f "subca_${subca_name}.pem" ] || [ -z ${subca_name} ]; do if [ ! -f "subca_${subca_name}.pem" ]; then echo "Sub CA does not exists: subca_${subca_name}.pem"; fi; echo -n "Sub CA name, to signed by: "; read subca_name; done; openssl genrsa -out "agent_${agent_name}.pem" 4096; tput setaf 3; echo -e "This is a Agent Certificate for: Test Agent: ${agent_name}\nSigned by the Sub CA: Test Sub CA: ${subca_name}"; tput setaf 7; openssl req -config openssl.cnf -new -subj "//CN=Test Agent: ${agent_name}" -key "agent_${agent_name}.pem" -out "agent_${agent_name}.csr"; openssl ca -config openssl.cnf -batch -in "agent_${agent_name}.csr" -out "agent_${agent_name}.crt" -keyfile "subca_${subca_name}.pem" -cert "subca_${subca_name}.crt"; cat "subca_${subca_name}.crt" rootca.crt > "agent_${agent_name}_chain.crt"; cat "agent_${agent_name}.pem" "agent_${agent_name}.crt" > "agent_${agent_name}_pair.pem"; openssl pkcs12 -export -nodes -passout pass: -CSP "Microsoft Enhanced RSA and AES Cryptographic Provider" -name "Test Agent: ${agent_name}" -caname "Test Sub CA: ${subca_name}" -caname "Test Root CA" -certfile "agent_${agent_name}_chain.crt" -out "agent_${agent_name}.pfx" -in "agent_${agent_name}_pair.pem"; tput setaf 3; echo -e "\n\nPrivate Key: agent_${agent_name}.pem\nPublic key: agent_${agent_name}.crt\nCertificate Signing Request: agent_${agent_name}.csr\nPFX: agent_${agent_name}.pfx"; tput setaf 7; unset agent_name; unset subca_name;
